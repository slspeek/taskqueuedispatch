apply plugin: 'war'
apply plugin: 'gae'

buildscript {
	repositories {
		add(new org.apache.ivy.plugins.resolver.URLResolver()) {
			name = 'GitHub'
			addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
		}
	}

	dependencies { classpath 'bmuschko:gradle-gae-plugin:0.5.2' }
}

gae {
	stopKey = 'STOP'
	disableUpdateCheck = true
	daemon = true
}

sourceSets {
	integrationTest {
		compileClasspath = sourceSets.main.output + configurations.testRuntime
		runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
		java { srcDir 'src/integration-test/java' }
	}
}

dependencies {
	compile project(':dispatch')
	compile "org.seleniumhq.selenium:selenium:2.0b3"
	compile "org.seleniumhq.selenium.client-drivers:selenium-java-client-driver:1.0.2"
	testCompile "com.google.appengine:appengine-api-stubs:1.6.0"
	testCompile "com.google.appengine:appengine-local-runtime:1.6.0"
	testCompile "com.google.appengine:appengine-testing:1.6.0"
	testCompile "org.mockito:mockito-all:1.9.0-rc1"
	testCompile "junit:junit:4.9"
}

task integrationTest(type: Test, dependsOn: gaeRun) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	//tuning the included/excluded tests
	include 'fspotcloud/taskqueuedispatch/integration/test/*ITest.class'
	
	doLast  {
		println "before"
		hello.execute()
		println "after"
	}
}

task hello(dependsOn: gaeStop) << {
	println "hello"
}

tasks.gaeStop << {
	println "in dolast of gaeStop"
}





